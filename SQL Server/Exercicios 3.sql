SELECT TOP 100 * INTO #TB_DADOSCLI  FROM [TB_DADOSCLI]
SELECT TOP 100 * INTO #TB_ENDERECO  FROM [TB_ENDERECO]
SELECT TOP 100 * INTO #TB_TELEFONE  FROM [TB_TELEFONE]
SELECT TOP 100 * INTO #TB_CLIENTE   FROM [TB_CLIENTE]

SELECT * FROM #TB_DADOSCLI
SELECT * FROM #TB_ENDERECO
SELECT * FROM #TB_TELEFONE
SELECT * FROM #TB_CLIENTE

--FAZENDO SELECT COM IN - (FAZ A BUSCA DE VALORES ESPECIFICADOS ENTRE PARÊNTESES)
--	BUSCAR TODOS OS REGISTROS QUE TENHA OS CLICODIGOS (10592,10593,10594)
SELECT * FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO IN (10592,10593,10594)

--	MOSTRAR OS CLICODIGOS DOS CLIENTES QUE TENHMA OS CODIGOS (10592,10593,10594))
SELECT SUM(DDS_CLICODIGO) AS SOMA_CLICODIGO
FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO IN (10592,10593,10594)

--	SELECIONAR OS DADOS DOS CLIENTES ('HENRIQUE GUILHARDUCCI','MARGARETH COELHO GOMES')
SELECT * FROM #TB_DADOSCLI
WHERE DDS_NOME IN ('HENRIQUE GUILHARDUCCI','MARGARETH COELHO GOMES')

--	SELECIONAR TODOS OS REGISTROS QUE NÃO COMECEM COM OS CLICODIGOS (10592,10593,10594)
SELECT * FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO NOT IN (10592,10593,10594)

--USANDO O SELECT IS NULL (SERVE PARA PODER MOSTRAR TODOS OS CAMPOS COM O CAMPO NULL,)
SELECT * FROM #TB_TELEFONE 
WHERE FON_SEQ1 IS NULL

--SELECIONAR TODOS OS NOMES QUE NÃO COMEÇAM OU TERMINAM COM UMA DETERMINADA LETRA.
SELECT * FROM #TB_DADOSCLI 
WHERE DDS_NOME NOT LIKE 'HE%'

SELECT *FROM #TB_DADOSCLI
WHERE DDS_NOME NOT LIKE '%CCI'

SELECT * FROM #TB_DADOSCLI
WHERE DDS_NOME LIKE '_A%'

SELECT * FROM #TB_DADOSCLI
WHERE DDS_NOME NOT LIKE '_A%'

--SELECT COM IS NOT NULL (MOSTRAR TODOS OS CAMPOS QUE NÃO ESTÁ VAZIOS)
SELECT FON_SEQ1, FON_CLICODIGO FROM #TB_TELEFONE
WHERE FON_SEQ1 IS NOT NULL
ORDER BY FON_CLICODIGO DESC

SELECT * FROM #TB_DADOSCLI
SELECT * FROM #TB_ENDERECO
SELECT * FROM #TB_TELEFONE
SELECT * FROM #TB_CLIENTE

--	SOMAR O CAMPO DDS_CLICODIGO + 1
SELECT DDS_CLICODIGO, DDS_CLICODIGO + 1 AS SOMA_CLICODIGO
FROM #TB_DADOSCLI
ORDER BY DDS_CLICODIGO

-- CALCULANDO O SUPOSTO IMPOSTO DE SALARIO DOS USUÁRIOS ('HENRIQUE GUILHARDUCCI','MARGARETH COELHO GOMES','JOSILENE NUNES DO VALE')
-- USANDO O CLICODIGO COMO SALARIO.
SELECT DDS_CLICODIGO, DDS_NOME, DDS_CLICODIGO * 0.19 AS PERCENTUAL_CLICODIGO,
	   DDS_CLICODIGO * 0.19 + DDS_CLICODIGO AS SALARIO_BRUTO
FROM #TB_DADOSCLI
WHERE DDS_NOME IN ('HENRIQUE GUILHARDUCCI','MARGARETH COELHO GOMES','JOSILENE NUNES DO VALE')
ORDER BY DDS_NOME

--DISTINCT 
--	AO MOSTRAR O FON_CLICODIGO, PODEMOS OBSERVAR QUE HÁ ALGUNS CAMPOS REPETIDOS. 
SELECT FON_CLICODIGO, COUNT(FON_CLICODIGO) FROM #TB_TELEFONE 
GROUP BY FON_CLICODIGO
--	COMO COMANDO DISTINCT NÃO IRÁ APARECER OS CÓDIGOS REPETIDOS. 
SELECT DISTINCT FON_CLICODIGO FROM #TB_TELEFONE

--JUNTANDO AS TABELAS QUE POSSUEM PK E FK
SELECT * FROM #TB_DADOSCLI, #TB_ENDERECO

--SELECIONANDO EM UMA TABELA O INFORMAÇÕES DE DIVERSAS TABELAS USANDO O UNION.
--	CRIANDO A TABELA TEMPORÁRIA. 
CREATE TABLE #DADOS (CAMPO_DADOS VARCHAR(800))

INSERT INTO #DADOS
SELECT DDS_NOME FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO = 10592
UNION
SELECT END_ENDERECO  FROM #TB_ENDERECO
WHERE END_CODIGO = 1
UNION 
SELECT END_BAIRRO FROM #TB_ENDERECO
WHERE END_CODIGO BETWEEN 5 AND 50

SELECT * FROM #DADOS
--SELECIONANDO EM UMA TABELA O INFORMAÇÕES DE DIVERSAS TABELAS USANDO O UNION E INSERINDO-A EM UMA TABELA TEMPORARIA.
--	CRIANDO A TABELA TEMPORÁRIA.
CREATE TABLE #TEMPORARIA(CAMPO VARCHAR(800))

INSERT INTO #TEMPORARIA
SELECT DDS_NOME FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO = 10592
UNION ALL
SELECT END_ENDERECO  FROM #TB_ENDERECO
WHERE END_CODIGO = 1
UNION ALL
SELECT END_BAIRRO FROM #TB_ENDERECO
WHERE END_CODIGO BETWEEN 5 AND 10

SELECT * FROM #TEMPORARIA
--OBS: OS CAMPOS A SEREM UNIDOS TERÃO QUE SER DO MESMO TIPO E COM A MESMA QUANTIA DE DE DADOS A SEREM PESQUIÇADOS. 

-- COUNT
--	CONTANDO TODAS AS LINHAS DA TABELA
SELECT COUNT(*) AS TOTAL
FROM #TB_DADOSCLI

--	CONTAR O APENAS OS TELEFONES DA COLUNA FON_FONE1 E OS NOMES DA COLUNA DSS_NOME.
SELECT COUNT(FON_FONE1) AS COUNT_FONE, COUNT(DDS_NOME) AS COUNT_NOME
FROM #TB_DADOSCLI INNER JOIN #TB_TELEFONE WITH(NOLOCK) ON DDS_CLICODIGO = FON_CLICODIGO

--	CONTATAR OS CLICODIGOS ACIMA DO CLICODIGO 10681
SELECT COUNT(DDS_CLICODIGO) AS TOTAL_ACIMA_80ID
FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO > 10681

-- CONTAR OS FON_CLICODIGO DA TABELA #TB_TELEFONE
SELECT COUNT(FON_CLICODIGO) AS CONTADOR
FROM #TB_TELEFONE
-- OBS. CONTOU TAMBÉM CLICODIGOS REPETIDOS

-- CONTAR OS FON_CLICODIGO DA TABELA #TB_TELEFONE, PORÉM NÃO CONTAR OS REPETIDOS
SELECT COUNT(DISTINCT FON_CLICODIGO)AS CONTATADOR_SEM_REPETICAO
FROM #TB_TELEFONE
--NÃO CONTOU OS CLICODIGOS REPETIDOS.

SELECT * FROM #TB_DADOSCLI
SELECT * FROM #TB_ENDERECO
SELECT * FROM #TB_CLIENTE
SELECT * FROM #TB_TELEFONE

--HAVING (MOSTRA A QUANTIDADE DESEJADA DOS FON_CLIDIGOS CONTATOS)
-- CONTAR OS NÚMEROS FON_CLICODIGOS REPETIDOS
SELECT FON_CLICODIGO, COUNT(FON_CLICODIGO) AS CLICODIGOS_REPETIDOS, FON_FONE1 
FROM #TB_TELEFONE 
GROUP BY FON_CLICODIGO, FON_FONE1
HAVING COUNT(FON_CLICODIGO) > 1

--SELECIONA A MÁXIMA OPÇÃO ESCOLHIDA
SELECT MAX(DDS_CLICODIGO) FROM #TB_DADOSCLI

--SELECIONA A OPÇÃO MÍNIMA QUE FOI ESCOLHIDA
SELECT MIN(DDS_CLICODIGO) FROM #TB_DADOSCLI

--USANDO O MAX E O MIN AO MESMO TEMPO 
SELECT MAX(DDS_CLICODIGO) AS MÁXIMO,MIN(DDS_CLICODIGO) AS MÍNIMO 
FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO > 10592 AND DDS_CLICODIGO < 10683

--PARA TESTES
SELECT * FROM #TB_DADOSCLI ORDER BY DDS_NOME ASC

--O MAX E O MIN TAMBÉM FUNCIONAM COM STRINGS
SELECT MAX(DDS_NOME) AS NOMEMÁXIMO
FROM #TB_DADOSCLI

SELECT MIN(DDS_NOME) AS NOMEMÍNIMO
FROM #TB_DADOSCLI

--SOMA DE VALORES COM SUM
SELECT SUM(DDS_CLICODIGO) AS SOMACLICODIGO
FROM #TB_DADOSCLI

SELECT SUM(DDS_CLICODIGO)AS SOMACLICODIGO
FROM #TB_DADOSCLI
WHERE DDS_CLICODIGO > 10592 AND DDS_CLICODIGO < 10596