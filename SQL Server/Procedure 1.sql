SELECT TOP 100 * INTO #TB_DADOSCLI		FROM [TB_DADOSCLI]
SELECT TOP 100 * INTO #TB_ENDERECO		FROM [TB_ENDERECO]
SELECT TOP 100 * INTO #TB_TELEFONE		FROM [TB_TELEFONE]
SELECT TOP 100 * INTO #TB_CLIENTE		FROM [TB_CLIENTE]
SELECT TOP 100 * INTO #TB_DETALHE_PLANO FROM [TB_DETALHE_PLANO]
SELECT TOP 100 * INTO #TB_ASSOCIADOS    FROM [TB_ASSOCIADOS]
SELECT TOP 100 * INTO #TB_PLANO			FROM [TB_PLANO]


SELECT * FROM #TB_DADOSCLI
SELECT * FROM #TB_ENDERECO
SELECT * FROM #TB_TELEFONE
SELECT * FROM #TB_CLIENTE
SELECT * FROM #TB_DETALHE_PLANO
SELECT * FROM #TB_ASSOCIADOS

--CPROCEDURE QUE BUSCA E LISTA O CODIGO E NOME DE CLIENTES QUE COMECEM COM ALGUMA LETRA DESEJADA E INSERIDA PELO USUÁRIO. 
[BUSCA_CLIENTE]'B'

CREATE PROCEDURE [BUSCA_CLIENTE]
(
	@BUSCA_NOME VARCHAR(50)
)
	AS BEGIN
		SET NOCOUNT ON 
		SELECT DDS_CLICODIGO, DDS_NOME FROM #TB_DADOSCLI
		WHERE DDS_NOME LIKE  @BUSCA_NOME + '%' 
	END 

DROP PROCEDURE [BUSCA_CLIENTE]
--CPROCEDURE QUE BUSCA E LISTA O CODIGO, NOME E ENDEREÇO DE CLIENTES QUE COMECEM COM ALGUMA LETRA DESEJADA E INSERIDA PELO USUÁRIO. 
[BUSCA_NOME_ENDERECO]'HEN'

CREATE PROCEDURE [BUSCA_NOME_ENDERECO]
(
	@B_N_E VARCHAR(40) 
)
	AS BEGIN
		SET NOCOUNT ON 
			SELECT DDS_CLICODIGO, DDS_NOME, END_ENDERECO
			FROM #TB_DADOSCLI
			INNER JOIN #TB_ENDERECO WITH(NOLOCK) ON DDS_CLICODIGO = END_CLICODIGO
			WHERE DDS_NOME LIKE @B_N_E + '%'
	END

DROP PROCEDURE [BUSCA_NOME_ENDERECO]

--CRIANDO UMA PROCEDURE PARA LISTAR E BUSCAR E CONTAR OS NOMES QUE COMECEM COM AS LETRAS INSERIDOS E DESEJADOS PELOS USUÁRIOS. 
[BUSCA_CLIENTE]'M' 

CREATE PROCEDURE [BUSCA_CLIENTE]
(
	@BUSCA_NOME VARCHAR(40)
)
	AS BEGIN 
		SET NOCOUNT ON
			
			DECLARE @CONTARDOR INT, @MENSAGEM CHAR(40)
			
			SELECT DDS_CLICODIGO, DDS_NOME FROM #TB_DADOSCLI
			WHERE DDS_NOME LIKE @BUSCA_NOME + '%'
			
			SELECT @CONTARDOR = COUNT(*) FROM #TB_DADOSCLI 
			WHERE DDS_NOME LIKE @BUSCA_NOME + '%'
			
			IF @CONTARDOR = 0 
			BEGIN
			    SELECT @MENSAGEM = 'NENHUM CLENTE CONTÉM "'+ @BUSCA_NOME +'"'
				PRINT @MENSAGEM
			END
	END

DROP PROCEDURE [BUSCA_CLIENTE]			

--ALTERANDO OS CAMPOS NOME E CPFCNPJ DO CLIENTE 
[ALTERAR_DADOS]'MARGARETH COELHO GOMES','CARLA','22222222'

CREATE PROCEDURE [ALTERAR_DADOS]
(
	@NOMEALTERAR VARCHAR(50),
	@NOME	 VARCHAR(50),
	@CPFCNPJ VARCHAR(20)
)
	AS BEGIN 
		SET NOCOUNT ON
			UPDATE #TB_DADOSCLI 
			SET DDS_NOME  =	@NOME, DDS_CPFCNPJ = @CPFCNPJ
			WHERE DDS_NOME = @NOMEALTERAR
	END
DROP PROCEDURE [ALTERAR_DADOS]

--LISTA  APROCEDURE 
SP_HELPTEXT [ALTERAR_DADOS_COMPLEXO]

--ALTERANDO DADOS DE TRÊS TABELAS (NOME, ENDEREÇO, FONE1).
EXECUTE [ALTERAR_DADOS_COMPLEXO]10592,'NOME_TESTE','END_TESTE','99999999'

ALTER PROCEDURE [ALTERAR_DADOS_COMPLEXO]  
(  
 @CLICODIGO   INT,  
 @NOME    VARCHAR(50),  
 @ENDERECO   VARCHAR(50),  
 @FONE1    VARCHAR(20)  
)  
 AS BEGIN   
  SET NOCOUNT ON  
    
  DECLARE @COUNT INT  
				--VERIFICA SE TODAS AS TABELAS TEM O CODIGO DIGITADO E ARAMAZENA NA VARIÁVEL @COUNT.
   SELECT @COUNT = COUNT(0) FROM #TB_CLIENTE WITH(NOLOCK)  
       INNER JOIN #TB_DADOSCLI WITH(NOLOCK) ON (DDS_CLICODIGO = CLI_CODIGO)  
       INNER JOIN #TB_ENDERECO WITH(NOLOCK) ON (END_CLICODIGO = CLI_CODIGO)  
       INNER JOIN #TB_TELEFONE WITH(NOLOCK) ON (FON_CLICODIGO = CLI_CODIGO)  
       WHERE CLI_CODIGO = @CLICODIGO  
         
   IF @COUNT >0   
   BEGIN  
     UPDATE #TB_DADOSCLI SET DDS_NOME = @NOME WHERE DDS_CLICODIGO = @CLICODIGO  
     UPDATE #TB_ENDERECO WITH(ROWLOCK) SET END_ENDERECO = @ENDERECO WHERE END_CLICODIGO = @CLICODIGO  
     UPDATE #TB_TELEFONE WITH(ROWLOCK) SET FON_FONE1 = @FONE1  WHERE FON_CLICODIGO = @CLICODIGO  
     
     SELECT 'INFORMAÇÕES ATUALIZADAS COM SUCESSO!!!'  
     
   END  
    ELSE  
    SELECT 'ESTE CÓDIGO NÃO EXISTE EM NOSSA BASE DE DADOS !!!'  
 END   
 
--SOMANDO DOIS VALORES DE UMA TABELA
[SOMAVALORES] 10596 
 
 ALTER PROCEDURE [SOMAVALORES]
(
	@CLICODIGO  INT
)
	AS BEGIN 
		SET NOCOUNT ON 
			
			DECLARE @CONTADOR INT
			
			SELECT @CONTADOR = COUNT(*) FROM #TB_DADOSCLI 
			INNER JOIN #TB_ASSOCIADOS WITH(NOLOCK) ON DDS_CLICODIGO = ASS_CLICODIGO
			WHERE DDS_CLICODIGO = @CLICODIGO
			
			IF 	@CONTADOR  > 0
			BEGIN	
				SELECT ASS_VALORPARCELAINIC + ASS_VALORPARCELAATUAL AS SOMA_DE_PARCELAS
				FROM #TB_ASSOCIADOS 
				WHERE ASS_CLICODIGO = @CLICODIGO
			END
			ELSE
				SELECT 'ESTE CÓDIGO NÃO EXISTE EM NOSSA BASE DE DADOS!!!!'
	END

--ALTERANDO O UM CAMPO DE ACORDO AO PARÁMENTRO INFORMADO 
[ALTERANDO_CAMPO_VALOR] 35

ALTER PROCEDURE [ALTERANDO_CAMPO_VALOR]
(
	@VALOR float 
)
  AS BEGIN 
	SET NOCOUNT ON 
		IF @VALOR > 30 
			BEGIN
				UPDATE #TB_ASSOCIADOS SET ASS_VALORPARCELAINIC = ASS_VALORPARCELAINIC * 3
				select 'CAMPO ALTERADO COM SUCESSO!!'
			END
			ELSE
				SELECT 'ESSE VALOR É INFERIOR DE 30!!!'
		END	
 
SELECT * FROM #TB_DADOSCLI
SELECT * FROM #TB_ENDERECO
SELECT * FROM #TB_TELEFONE
SELECT * FROM #TB_CLIENTE
SELECT * FROM #TB_DETALHE_PLANO
SELECT * FROM #TB_ASSOCIADOS


--LISTAR A QUANTIDADE DE PESSOAS QUE MORAM NAS CIDADES LISTADAS. 
[CONTAR_PESSOAS]'GUARUJA','SAO PAULO'

CREATE PROCEDURE [CONTAR_PESSOAS]
(
	@CIDADE1  VARCHAR(30),
	@CIDADE2  VARCHAR(30)
)
	AS BEGIN 
		SET NOCOUNT ON 
			SELECT END_CIDADE, COUNT(END_CLICODIGO) FROM #TB_ENDERECO
			WHERE END_CIDADE IN (@CIDADE1,@CIDADE2)
			GROUP BY END_CIDADE	
	END
	
